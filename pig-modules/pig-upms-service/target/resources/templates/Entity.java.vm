package ${package.Entity};

import io.swagger.annotations.ApiModelProperty;
import com.baomidou.mybatisplus.activerecord.Model;
import com.baomidou.mybatisplus.annotations.TableId;
import com.baomidou.mybatisplus.annotations.TableName;
import lombok.Data;
import lombok.EqualsAndHashCode;
    #if(${hasBigDecimal})
    import java.math.BigDecimal;
    #end
import java.io.Serializable;
import java.util.Date;

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Data
#if("${table.comment}" != "")
@ApiModel(value = "${table.comment}")
#else
@ApiModel
#end
#if(${table.convert})
@TableName("${table.name}" )
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end { #elseif(${activeRecord}) public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable{
#end
    private static final long serialVersionUID=1L; ## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
    #set($keyPropertyName=${field.propertyName})
    #end
    #if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
    @ApiModelProperty(value = "${field.comment}")
    #end
#if(${field.keyFlag})
## 主键
#if(${field.keyIdentityFlag})
    @TableId(value = "${field.name}" , type = IdType.AUTO)
#elseif(${field.convert})
    @TableId("${field.name}" )
#end
## 普通字段
#elseif(${field.fill})
## -----   存在字段填充设置   -----
#if(${field.convert})
    @TableField(value = "${field.name}" , fill = FieldFill.${field.fill})
#else
    @TableField(fill = FieldFill.${field.fill})
#end
#elseif(${field.convert})
    @TableField("${field.name}" )
#end
## 乐观锁注解
#if(${versionFieldName}==${field.name})
    @Version
#end
## 逻辑删除注解
#if(${logicDeleteFieldName}==${field.name})
    @TableLogic
#end
    private ${field.propertyType} ${field.propertyName};
#end


## ----------  END 字段循环遍历  ----------
#if(${activeRecord})
    @Override
    protected Serializable pkVal() {
        #if(${keyPropertyName})
        return this.${keyPropertyName};
        #else
        return this.id;
        #end
    }
#end

}
